## default to not show code, unless we ask for it.
knitr::opts_chunk$set(echo=FALSE)
options(digits = 3)
library(tidyverse)
library(magrittr)
library(patchwork)
library(lubridate)
library(tsibble)
library(feasts)
library(forecast)
library(sandwich)
library(lmtest)
library(blsR)
library(dplyr)
library(readr)
library(fable)
library(gridExtra)
library(latex2exp)
dataw1 <- read.table("https://gml.noaa.gov/webdata/ccgg/trends/co2/co2_weekly_mlo.txt", header=FALSE)
dataw1 <- dataw1 %>% select(V1, V2, V3, V5) %>% rename("year"=V1, "month"=V2, "day"=V3, "co2"=V5) %>% filter(co2>0)
dataw1$year_month <- lubridate::make_datetime(year=dataw1$year, month=dataw1$month, tz='UTC')
dataw <- dataw1 %>% select(year_month, co2) %>% mutate(year_month = as.Date(year_month, "%Y-%m"))
dataw <- aggregate(dataw$co2, by=list(year_month=dataw$year_month), FUN=mean) %>% rename("time_index"=year_month, "CO2_avg"=x)
co2_present <- dataw %>% mutate(time_index = yearmonth(as.character(time_index)))  %>% as_tsibble(index=time_index)
co2_present <- tsibble::fill_gaps(co2_present, CO2_avg=330.5)
##basic plots
co2_present %>% gg_tsdisplay(CO2_avg, plot_type="partial") +
ylab(TeX(r'($CO_2$ parts per million)')) +
ggtitle("Time Series, Autocorrelation (acf), Partial Autocorrelation(pacf)")
co2_tsb <- co2 %>% as_tsibble()
colnames(co2_tsb)[2] <- "co2_ppm"
##examining seasonality
co2_present %>% gg_season(CO2_avg) +
ylab(TeX(r'($CO_2$ parts per million)')) +
ggtitle("Annual Seasonality")
co2_present %>%
gg_subseries(CO2_avg) +
ylab(TeX(r'($CO_2$ parts per million)')) +
ggtitle("Seasonal Sub-series for each month")
plot.ts(co2_present$CO2_avg, col = 'red', type = 'l',
xlab = "Year (time period: month)", ylab = "CO2 ppm",
main = TeX(r'(Time-Series plot of $CO_2$ concentration)'))
lines(stats::filter(co2_present$CO2_avg, sides=2, rep(1, 12)/12), lty = 1,
lwd = 1.5, col = "blue")
leg.txt <- c("Time-series",
"12-Month Symmetric Moving Average")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 1.5),
col = c("red", "blue"), bty = 'n', cex = .8)
co2_decomp <- co2_present %>%
model(
classical_decomposition(CO2_avg, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition")
co2_decomp
##examining just the section above 1979
co2_1998_plus <- dataw1 %>% select(year, month, co2) %>% filter(year > 1997)
co2_1998_plus$time_index <- lubridate::make_datetime(year=co2_1998_plus$year, month=co2_1998_plus$month, tz='UTC')
co2_1998_plus <- co2_1998_plus %>% select(time_index, co2) %>% mutate(time_index = as.Date(time_index))
co2_1998_plus <- aggregate(co2_1998_plus$co2, by=list(time_index=co2_1998_plus$time_index), FUN=mean) %>% rename("CO2_avg"=x)
co2_1998_plus <- co2_1998_plus %>% mutate(time_index = yearmonth(as.character(time_index))) %>% as_tsibble( index=time_index)
co2_1998_plus %>% gg_tsdisplay(CO2_avg, plot_type="partial") +
ylab(TeX(r'($CO_2$ parts per million)')) +
ggtitle("Time Series, Autocorrelation (acf), Partial Autocorrelation(pacf)")
# detrending the data
trend <- lm(co2_present$CO2_avg ~ co2_present$time_index)
summary(trend)
detrend <- residuals(trend)
ts.plot(detrend, xlab="Month", ylab="Detrended C02 Levels")
acf(detrend)
pacf(detrend)
## detrending - differencing
differenced <- diff(co2_present$CO2_avg)
ts.plot(differenced)
acf(differenced)
pacf(differenced)
Box.test(differenced, type="Ljung")
set.seed(44)
colnames(co2_1998_plus)[2] <- "co2_ppm"
fit <- co2_tsb %>% model(TSLM(co2_ppm ~ trend() + I(trend()^2) + season()))
simulation <- fit %>% forecast(h = 295)
simulation.with.bootstrap <- fit %>% forecast(h = 295, times = 50, bootstrap = TRUE)
aug <- fit %>% augment()
print("Innnovation Residual Mean")
print(mean(aug$.resid))
qqnorm(aug$.resid, pch = 1, frame = FALSE, xlab = "Fitted", ylab = "Residual")
qqline(aug$.resid)
fit %>% gg_tsresiduals()
co2_tsb %>% autoplot(co2_ppm) +
autolayer(simulation, level=99, alpha=0.5) +
theme_classic() +
labs(title="CO_2 forecast - Linear")
co2_tsb %>% autoplot(co2_ppm) +
autolayer(simulation.with.bootstrap, level=99, alpha=0.5) +
theme_classic() +
labs(title="CO_2 forecast with Bootstrap - Linear")
print("Accuracy of trend + season")
colnames(co2_1998_plus)[1] <- "index"
accuracy(simulation$.mean, co2_1998_plus$co2_ppm)
print("Accuracy of trend + season with Bootstrap")
accuracy(simulation.with.bootstrap$.mean, co2_1998_plus$co2_ppm)
accuracy(simulation, co2_1998_plus,list(winkler = winkler_score), level = 80)
accuracy(simulation.with.bootstrap, co2_1998_plus, list(winkler = winkler_score), level = 80)
accuracy(simulation, co2_1998_plus, list(winkler = winkler_score), level = 95)
accuracy(simulation.with.bootstrap, co2_1998_plus, list(winkler = winkler_score), level = 95)
tail(simulation$.mean)
n <- 36
tail.actual <- tail(co2_1998_plus$co2_ppm, n)
tail.pred <- tail(simulation$.mean, n)
print("RMSE of Last 36 months")
print(sqrt(mean((tail.actual-tail.pred)^2)))
head.actual <- head(co2_1998_plus$co2_ppm, n)
head.pred <- head(simulation$.mean, n)
print("RMSE of First 36 months")
print(sqrt(mean((head.actual-head.pred)^2)))
set.seed(44)
colnames(co2_1998_plus)[2] <- "co2_ppm"
fit <- co2_tsb %>% model(ARIMA(co2_ppm ~ 0 + pdq(6,1,6) + PDQ(2,1,0),
stepwise=FALSE, approximation=FALSE, method = "ML"))
simulation <- fit %>% forecast(h = 295)
simulation.with.bootstrap <- fit %>% forecast(h = 295, times = 50, bootstrap = TRUE)
aug <- fit %>% augment()
print("Innnovation Residual Mean")
print(mean(aug$.resid))
qqnorm(aug$.resid, pch = 1, frame = FALSE, xlab = "Fitted", ylab = "Residual")
fit %>% gg_tsresiduals()
co2_tsb %>% autoplot(co2_ppm) +
autolayer(simulation, level=95, alpha=0.5) +
theme_classic() +
labs(title="CO_2 forecast - SARIMA")
co2_tsb %>% autoplot(co2_ppm) +
autolayer(simulation.with.bootstrap, level=95, alpha=0.5) +
theme_classic() +
labs(title="CO_2 forecast with Bootstrap - SARIMA")
print("Accuracy of SARIMA ")
colnames(co2_1998_plus)[1] <- "index"
accuracy(simulation$.mean, co2_1998_plus$co2_ppm)
print("Accuracy of SARIMA with Bootstrap")
accuracy(simulation.with.bootstrap$.mean, co2_1998_plus$co2_ppm)
accuracy(simulation, co2_1998_plus,list(winkler = winkler_score), level = 80)
accuracy(simulation.with.bootstrap, co2_1998_plus, list(winkler = winkler_score), level = 80)
accuracy(simulation, co2_1998_plus, list(winkler = winkler_score), level = 95)
accuracy(simulation.with.bootstrap, co2_1998_plus, list(winkler = winkler_score), level = 95)
n <- 36
tail.actual <- tail(co2_1998_plus$co2_ppm, n)
tail.pred <- tail(simulation$.mean, n)
print("RMSE of Last 36 months")
print(sqrt(mean((tail.actual-tail.pred)^2)))
head.actual <- head(co2_1998_plus$co2_ppm, n)
head.pred <- head(simulation$.mean, n)
print("RMSE of First 36 months")
print(sqrt(mean((head.actual-head.pred)^2)))
co2_tsb <- co2 %>% as_tsibble()
colnames(co2_tsb)[2] <- "co2_ppm"
arima.fit <- co2_tsb %>% model(ARIMA(co2_ppm ~ 0 + pdq(6,1,6) + PDQ(2,1,0),
stepwise=FALSE, approximation=FALSE, method = "ML"))
arima.sim <- forecast(arima.fit, model = arima.fit, h=380)
tail(arima.sim$.mean)
linear.fit <- co2_tsb %>% model(TSLM(co2_ppm ~ trend() + I(trend()^2) + season()))
linear.sim <- linear.fit %>% forecast(h = 295)
tail(linear.sim$.mean)
linear.sim.295 <- linear.fit %>% forecast(h = 295)
arima.fit.295 <- arima.fit %>% forecast(h = 295)
all.forecast <- bind_cols(co2_1998_plus, linear.sim.295$.mean, arima.fit.295$.mean)
colnames(all.forecast)[3] <- "linear"
colnames(all.forecast)[4] <- "arima"
forecast.resi <- all.forecast %>%
mutate(linear.residual = co2_ppm-linear) %>%
mutate(arima.residual  = co2_ppm-arima)
ttest.resi <- t.test(forecast.resi$linear.residual,
forecast.resi$arima.residual, alternative = c("two.sided"))
print("Residual t-test Result")
print(ttest.resi)
n <- 36
tail.data <- tail(forecast.resi, n)
head.data <- head(forecast.resi, n)
print("RMSE of Last 36 months - SARIMA")
print(sqrt(mean((tail.data$arima.residual)^2)))
print("RMSE of First 36 months - ARIMA")
print(sqrt(mean((head.data$arima.residual)^2)))
print("RMSE of Last 36 months - Linear")
print(sqrt(mean((tail.data$linear.residual)^2)))
print("RMSE of First 36 months - Linear")
print(sqrt(mean((head.data$linear.residual)^2)))
print("Accuracy of Linear Model")
accuracy(forecast.resi$linear, co2_1998_plus$co2_ppm)
print("Accuracy of ARIMA Model")
accuracy(forecast.resi$arima, co2_1998_plus$co2_ppm)
Box.test(forecast.resi$linear.residual, lag = 1, type = c("Ljung-Box"), fitdf = 0)
Box.test(forecast.resi$arima.residual, lag = 1, type = c("Ljung-Box"), fitdf = 0)
##Seasonally adjust the weekly nOAA data
##lagging at 12 for annual seasonal, can change to other number for annual "seasons"
season_num <- 12
co2_present$seasonally_adjusted_co2 <- difference(co2_present$CO2_avg, lag=season_num)
##split into seasonally adjusted and nonseasonally adjusted
SA_co2_present <- co2_present %>% select(time_index, seasonally_adjusted_co2)
NSA_co2_present <- co2_present %>% select(time_index, CO2_avg)
##split test and training sets
SA_co2_present_train <- SA_co2_present %>% filter(time_index < yearmonth("2020-08-01"))
SA_co2_present_test <- SA_co2_present %>% filter(time_index > yearmonth("2020-07-01"))
NSA_co2_present_train <- NSA_co2_present %>% filter(time_index < yearmonth("2020-08-01"))
NSA_co2_present_test <- NSA_co2_present %>% filter(time_index > yearmonth("2020-07-01"))
seeking_arima <- function(x.ts, maxord, p_start) {
best.aic <- 1e8 ##set a low minimum value to iterate against
p_seq = c()
d_seq = c()
q_seq = c()
aic_seq = c()
n <- length(x.ts)
for (p in p_start:maxord[1])
for (d in p_start:maxord[2])
for (q in p_start:maxord[3]) {
p_seq <- c(p_seq, p)
d_seq <- c(d_seq, d)
q_seq <- c(q_seq, q)
fit <- arima(x.ts, order = c(p,d,q), method='CSS')
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
aic_seq <- c(aic_seq, fit.aic)
if (fit.aic < best.aic) {
best.aic <- fit.aic
best.model <- c(p,d,q)
}
}
df = data.frame(p_seq, d_seq, q_seq, aic_seq)
return (df[order(aic_seq),])
}
##SA
best.arima.sa.insample <- seeking_arima(SA_co2_present$seasonally_adjusted_co2, maxord = c(12,2,0), 0)
best.sas.insample <- head(best.arima.sa.insample)
best.arima.sa.outsample <- seeking_arima(SA_co2_present_train$seasonally_adjusted_co2, maxord = c(12,2,0), 0)
best.sas.outsample <- head(best.arima.sa.outsample)
print("Top Seasonlly Adjusted ARIMA - in sample")
best.sas.insample
print("Top Seasonlly Adjusted ARIMA - (psuedo) out of sample")
best.sas.outsample
##NSA
best.arima.nsa.insample <- seeking_arima(NSA_co2_present$CO2_avg, maxord = c(12,1,12), 0)
best.nsas.insample <- head(best.arima.nsa.insample)
best.arima.nsa.outsample <- seeking_arima(NSA_co2_present_train$CO2_avg, maxord = c(12,1,12), 0)
best.nsas.outsample <- head(best.arima.nsa.outsample)
print("Top Non-Seasonlly Adjusted ARIMA - in sample")
best.nsas.insample
print("Top Non-Seasonlly Adjusted ARIMA - (psuedo) out of sample")
best.nsas.outsample
### SA model with best AIC ARIMA
fit <- SA_co2_present %>% model(ARIMA(seasonally_adjusted_co2 ~ 0 + pdq(best.sas.insample$p_seq[1],
best.sas.insample$d_seq[1],
best.sas.insample$q_seq[1]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(tail(aug$.resid,567)))
qqnorm(tail(aug$.resid,567), pch = 1, frame = FALSE, xlab = "Fitted", ylab = "Residual")
fit %>% gg_tsresiduals()
mse_sa_insample <- (accuracy(aug$.fitted, SA_co2_present$seasonally_adjusted_co2)[2])^2
mse_sa_insample
fit <- SA_co2_present %>% model(ARIMA(seasonally_adjusted_co2 ~ 0 + pdq(best.sas.insample$p_seq[2],
best.sas.insample$d_seq[2],
best.sas.insample$q_seq[2]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(tail(aug$.resid,567)))
mse_sa_insample <- (accuracy(aug$.fitted, SA_co2_present$seasonally_adjusted_co2)[2])^2
mse_sa_insample
fit <- SA_co2_present %>% model(ARIMA(seasonally_adjusted_co2 ~ 0 + pdq(best.sas.insample$p_seq[3],
best.sas.insample$d_seq[3],
best.sas.insample$q_seq[3]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(tail(aug$.resid,567)))
mse_sa_insample <- (accuracy(aug$.fitted, SA_co2_present$seasonally_adjusted_co2)[2])^2
mse_sa_insample
fit <- SA_co2_present %>% model(ARIMA(seasonally_adjusted_co2 ~ 0 + pdq(best.sas.insample$p_seq[4],
best.sas.insample$d_seq[4],
best.sas.insample$q_seq[4]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(tail(aug$.resid,567)))
mse_sa_insample <- (accuracy(aug$.fitted, SA_co2_present$seasonally_adjusted_co2)[2])^2
mse_sa_insample
fit <- SA_co2_present %>% model(ARIMA(seasonally_adjusted_co2 ~ 0 + pdq(best.sas.insample$p_seq[5],
best.sas.insample$d_seq[5],
best.sas.insample$q_seq[5]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(tail(aug$.resid,567)))
mse_sa_insample <- (accuracy(aug$.fitted, SA_co2_present$seasonally_adjusted_co2)[2])^2
mse_sa_insample
### NSA model with best AIC ARIMA
fit <- NSA_co2_present %>% model(ARIMA(CO2_avg ~ 0 + pdq(best.nsas.insample$p_seq[1],
best.nsas.insample$d_seq[1],
best.nsas.insample$q_seq[1]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
aug<- fit %>% augment()
print(mean(aug$.resid))
qqnorm(aug$.resid, pch = 1, frame = FALSE, xlab = "Fitted", ylab = "Residual")
fit %>% gg_tsresiduals()
mse_nsa_insample <- (accuracy(aug$.fitted, NSA_co2_present$CO2_avg)[2])^2
##out of sample
outofsample <- function(p,dd, q, value, len_sample, len_pred) {
d <- c()
for (i in 1:len_pred) {
n <- len_sample + i-1
fit <- arima(value[1:n], order = c(p,dd, q), method = "CSS")
val <- predict(fit,1)
d <- append(d, round(val$pred[1],1))
}
start <- len_sample+1
end <- len_sample + len_pred
mean((d-value[start:end])^2)
}
mse_sa <- c()
for (i in 1:6) {
mse_sa <- c(mse_sa, outofsample(p=best.sas.outsample$p_seq[i], d=best.sas.outsample$d_seq[i], q=best.sas.outsample$q_seq[i], value=NSA_co2_present$CO2_avg, len_sample = 555, len_pred=24))
}
best.sas.outsample$mse <- mse_sa
best.sas.outsample
mse_nsa <- c()
for (i in 1:6) {
mse_nsa <- c(mse_nsa, outofsample(p=best.nsas.outsample$p_seq[i], d=best.sas.outsample$d_seq[i], q=best.sas.outsample$q_seq[i], value=SA_co2_present$seasonally_adjusted_co2, len_sample = 555, len_pred=24))
}
best.nsas.outsample$mse <- mse_nsa
best.nsas.outsample
## In addition, fit a polynomial time-trend model to the seasonally-adjusted series and compare its performance to that of your ARIMA model.
##
lin_fit <- SA_co2_present_train %>% model(TSLM(seasonally_adjusted_co2 ~ trend()))
report(lin_fit)
lin_fit_forecast <- forecast(lin_fit, h=24)
mse_lin <- (accuracy(lin_fit_forecast$.mean, SA_co2_present_test$seasonally_adjusted_co2)[2]^2)
## In addition, fit a polynomial time-trend model to the seasonally-adjusted series and compare its performance to that of your ARIMA model.
##
linlog_fit <- SA_co2_present_train %>% model(TSLM(log(seasonally_adjusted_co2) ~ trend()))
report(linlog_fit)
linlog_fit_forecast <- forecast(linlog_fit, h=24)
mse_loglin <- accuracy(linlog_fit_forecast$.mean, log(SA_co2_present_test$seasonally_adjusted_co2))[2]^2
## In addition, fit a polynomial time-trend model to the seasonally-adjusted series and compare its performance to that of your ARIMA model.
##
quad_fit <- SA_co2_present_train %>% model(TSLM(seasonally_adjusted_co2 ~ trend() + I(trend()^2)))
report(quad_fit)
quad_fit_forecast <- forecast(quad_fit, h=24)
mse_quad <- accuracy(quad_fit_forecast$.mean, SA_co2_present_test$seasonally_adjusted_co2)[2]^2
colnames(NSA_co2_present)[2] <- "co2_ppm"
fit <- NSA_co2_present %>% model(ARIMA(co2_ppm ~ 0 + pdq(best.sas.outsample$p_seq[1],
best.sas.outsample$d_seq[1],
best.sas.outsample$q_seq[1]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE))
pred.data <- fit %>% forecast(h = 1205)
hilo.pred <- pred.data %>% hilo(level = c(80,95)) %>% unpack_hilo("95%") %>%
unpack_hilo("80%")
co2_present_lo <- co2_present
colnames(co2_present_lo)[2] <- "co2_ppm"
co2_present_lo %>% autoplot(co2_ppm) +
autolayer(pred.data, level=95, alpha=0.5) +
theme_minimal() +
labs(title="Future Forecast - ARIMA Model")
myData <- matrix((1:65),
nrow=13,
ncol=5,)
colnames(myData) <- c("point estimate", "80-low", "80-high", "95-low", "95-high")
rownames(myData) <- c("Linear 420 FIRST", "SARIMA 420", "NSA SARIMA 420",
"Linear 500", "SARIMA 500", "NSA SARIMA 500",
"Linear 420 LAST", "SARIMA 420", "NSA SARIMA 420",
"Linear 500", "SARIMA 500", "NSA SARIMA 500", "Jan 2122")
myData[1] <- "Apr 2022"
myData[14] <- "Mar 2023"
myData[27] <- "Mar 2022"
myData[40] <- "Apr 2023"
myData[53] <- "May 2021"
myData[8]  <- "Dec 2023"
myData[21] <- "Nov 2024"
myData[34] <- "Nov 2023"
myData[47] <- "Nov 2024"
myData[60] <- "Oct 2023"
myData[5]  <- "Mar 2051"
myData[18] <- "May 2051"
myData[31] <- "Jan 2051"
myData[44] <- "Apr 2052"
myData[57] <- "Mar 2050"
myData[11] <- "Mar 2051"
myData[24] <- "Dec 2052"
myData[37] <- "Nov 2051"
myData[50] <- "Oct 2053"
myData[63] <- "Dec 2050"
myData[13] <- 649
myData[26] <- 588
myData[39] <- 710
myData[52] <- 555
myData[65] <- 743
print(myData)
### NSA model with best AIC ARIMA
fit <- NSA_co2_present %>% model(ARIMA(CO2_avg ~ 0 + pdq(best.nsas.insample$p_seq[1],
best.nsas.insample$d_seq[1],
best.nsas.insample$q_seq[1]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
### NSA model with best AIC ARIMA
fit <- NSA_co2_present %>% model(ARIMA(CO2_avg ~ 0 + pdq(best.nsas.insample$p_seq[1],
best.nsas.insample$d_seq[1],
best.nsas.insample$q_seq[1]) + PDQ(1,1,1),
stepwise=FALSE, approximation=FALSE, method='ML'))
### NSA model with best AIC ARIMA
NSA_co2_present
